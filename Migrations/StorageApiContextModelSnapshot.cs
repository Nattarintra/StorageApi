// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StorageApi.Data;

#nullable disable

namespace StorageApi.Migrations
{
    [DbContext(typeof(StorageApiContext))]
    partial class StorageApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StorageApi.Models.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Shelf")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Sample Category",
                            Count = 10,
                            Description = "This is a sample product description.",
                            Name = "Sample Product",
                            Price = 100,
                            Shelf = "A1"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Another Category",
                            Count = 20,
                            Description = "This is another product description.",
                            Name = "Another Product",
                            Price = 200,
                            Shelf = "B2"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Third Category",
                            Count = 30,
                            Description = "This is the third product description.",
                            Name = "Third Product",
                            Price = 300,
                            Shelf = "C3"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Fourth Category",
                            Count = 40,
                            Description = "This is the fourth product description.",
                            Name = "Fourth Product",
                            Price = 400,
                            Shelf = "D4"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
